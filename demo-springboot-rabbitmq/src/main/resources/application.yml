server:
  port: 33000
  servlet:
    context-path: /rabbitmq

spring:
  rabbitmq:
    addresses: 192.168.110.36:5672
    username: admin
    password: admin
    # 虚拟交换机
    virtual-host: vhost
    # 可以确保消息成功发送到交换机
    publisher-confirm-type: correlated

    # 优先级
    # spring.rabbitmq.template.mandatory > spring.rabbitmq.publisher-returns
    # spring.rabbitmq.template.mandatory为true、false时，忽略spring.rabbitmq.publisher-returns
    # spring.rabbitmq.template.mandatory为null（即不配置）时，由spring.rabbitmq.publisher-returns确定
    # 可以确保消息在未被队列接收时返回，而不是丢弃
    publisher-returns: true
#    template:
      # 消息在没有被队列接收时，是否强行退回还是直接丢弃
#      mandatory:
    # 如果使用自定义监听器，下面的配置可以注释掉（也可以不用管）
    listener:
      simple:
        # none：关闭ack，MQ假定消费者获取消息后会成功处理，因此消息投递后立即被删除；
        # auto：自动确认，出现异常时返回nack，消息回滚到mq；没有异常，返回ack；
        # manual：自己根据业务情况，判断什么时候该ack；采用手动确认，可以自定义监听器，不使用@RabbitListener注解来消费消息
        acknowledge-mode: manual
        # 预处理模式，指定消费者每个线程读取多少条消息，在消费者未返回确认之前，不再处理下一条消息
        prefetch: 1
        # 指定消费者最小线程数  RabbitListener
        concurrency: 1
        # 指定消费者最大线程数  RabbitListener
        max-concurrency: 10
          # 消息消费失败后，重新进入消费队列中
        default-requeue-rejected: true
        retry:
          # 是否开启消费者重试（false：关闭消费者重试；true：开启消息重试）
          enabled: true
          # 最大重试次数
          max-attempts: 3
          # 消息重新投递的间隔时间 默认1s
          initial-interval: 3000



